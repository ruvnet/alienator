// Code generated by protoc-gen-go. DO NOT EDIT.

package vibecast

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	BuildTime     string                 `protobuf:"bytes,2,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	GitCommit     string                 `protobuf:"bytes,3,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,5,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	GoVersion     string                 `protobuf:"bytes,6,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
	Os            string                 `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`
	Arch          string                 `protobuf:"bytes,8,opt,name=arch,proto3" json:"arch,omitempty"`
	NumCpu        int32                  `protobuf:"varint,9,opt,name=num_cpu,json=numCpu,proto3" json:"num_cpu,omitempty"`
	MemoryUsed    int64                  `protobuf:"varint,10,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`
	MemoryTotal   int64                  `protobuf:"varint,11,opt,name=memory_total,json=memoryTotal,proto3" json:"memory_total,omitempty"`
}

type MetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricNames []string               `protobuf:"bytes,1,rep,name=metric_names,json=metricNames,proto3" json:"metric_names,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

type MetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics map[string]*MetricData `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

type MetricData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value     float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Unit      string                 `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Labels    map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

type ClearCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheNames []string `protobuf:"bytes,1,rep,name=cache_names,json=cacheNames,proto3" json:"cache_names,omitempty"`
}

type ClearCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ItemsCleared int64  `protobuf:"varint,3,opt,name=items_cleared,json=itemsCleared,proto3" json:"items_cleared,omitempty"`
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
}

func (x *MetricsRequest) Reset() {
	*x = MetricsRequest{}
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
}

func (x *MetricData) Reset() {
	*x = MetricData{}
}

func (x *ClearCacheRequest) Reset() {
	*x = ClearCacheRequest{}
}

func (x *ClearCacheResponse) Reset() {
	*x = ClearCacheResponse{}
}

type AdminServiceClient interface {
	GetSystemInfo(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SystemInfo, error)
	GetMetrics(ctx context.Context, in *MetricsRequest, opts ...grpc.CallOption) (*MetricsResponse, error)
	ClearCache(ctx context.Context, in *ClearCacheRequest, opts ...grpc.CallOption) (*ClearCacheResponse, error)
}

type adminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminServiceClient(cc grpc.ClientConnInterface) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) GetSystemInfo(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SystemInfo, error) {
	out := new(SystemInfo)
	err := c.cc.Invoke(ctx, "/vibecast.v1.AdminService/GetSystemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetMetrics(ctx context.Context, in *MetricsRequest, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/vibecast.v1.AdminService/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ClearCache(ctx context.Context, in *ClearCacheRequest, opts ...grpc.CallOption) (*ClearCacheResponse, error) {
	out := new(ClearCacheResponse)
	err := c.cc.Invoke(ctx, "/vibecast.v1.AdminService/ClearCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type AdminServiceServer interface {
	GetSystemInfo(context.Context, *emptypb.Empty) (*SystemInfo, error)
	GetMetrics(context.Context, *MetricsRequest) (*MetricsResponse, error)
	ClearCache(context.Context, *ClearCacheRequest) (*ClearCacheResponse, error)
}

type UnimplementedAdminServiceServer struct{}

func (UnimplementedAdminServiceServer) GetSystemInfo(context.Context, *emptypb.Empty) (*SystemInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemInfo not implemented")
}

func (UnimplementedAdminServiceServer) GetMetrics(context.Context, *MetricsRequest) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}

func (UnimplementedAdminServiceServer) ClearCache(context.Context, *ClearCacheRequest) (*ClearCacheResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearCache not implemented")
}

func RegisterAdminServiceServer(s grpc.ServiceRegistrar, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vibecast.v1.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSystemInfo",
			Handler:    nil,
		},
		{
			MethodName: "GetMetrics",
			Handler:    nil,
		},
		{
			MethodName: "ClearCache",
			Handler:    nil,
		},
	},
	Streams: []grpc.StreamDesc{},
}